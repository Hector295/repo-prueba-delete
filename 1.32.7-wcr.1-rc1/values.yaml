# -- RKE2 cluster core configuration
cluster:
  # -- Cluster identifier used for naming resources and certificate generation
  name: "prod-cluster"

  # -- ETCD distributed key-value store configuration
  etcd:
    # -- Enable Prometheus metrics endpoint for ETCD monitoring (port 2381)
    exposeMetrics: false
    # -- ETCD backup and snapshot configuration
    backup:
      # -- Disable automatic periodic snapshots (manual snapshots still available)
      disableAutomaticSnapshots: true
    # -- Additional command-line arguments for ETCD server startup
    extraArgs: []
    # Example extraArgs for ETCD tuning:
    # - election-timeout=1000      # Election timeout in milliseconds
    # - heartbeat-interval=100     # Heartbeat interval in milliseconds

  # -- Kubernetes control plane components configuration
  kubeComponents:
    # -- Controller Manager handles cluster-level functions like replication
    kubeControllerManager:
      # -- Additional arguments for controller manager (security, cloud provider, etc.)
      extraArgs: []
      # Common extraArgs examples:
      # - cloud-provider=external            # Use external cloud provider
      # - terminated-pod-gc-threshold=10     # Garbage collect terminated pods

    # -- API Server provides the Kubernetes API and validates objects
    kubeApiServer:
      # -- Additional arguments for API server (authentication, authorization, etc.)
      extraArgs: []
      # Common extraArgs examples:
      # - audit-log-path=/var/log/audit.log  # Enable audit logging
      # - enable-admission-plugins=PodSecurity # Enable pod security standards

    # -- Scheduler assigns pods to nodes based on resource requirements
    kubeScheduler:
      # -- Additional arguments for scheduler (policies, profiles, etc.)
      extraArgs: []
      # Common extraArgs examples:
      # - v=2                                # Increase verbosity level
      # - kube-api-qps=50                    # API server QPS limit

    # -- Proxy handles network rules and load balancing on each node
    kubeProxy:
      # -- Additional arguments for kube-proxy (networking mode, IP tables, etc.)
      extraArgs: []
      # Common extraArgs examples:
      # - proxy-mode=ipvs                    # Use IPVS for better performance
      # - cluster-cidr=10.42.0.0/16         # Pod network CIDR

    # -- Kubelet manages pods and containers on each node
    kubelet:
      # -- Additional arguments for kubelet (container runtime, logging, security)
      extraArgs: []
      # Common extraArgs examples:
      # - max-pods=110                       # Maximum pods per node
      # - container-log-max-size=10Mi        # Log rotation settings

  # -- Kubernetes labels applied to all cluster nodes for scheduling and selection
  labels: {}
  # -- Kubernetes annotations applied to all cluster nodes for metadata
  annotations: {}
  # -- Repository credentials for accessing private Helm charts and add-ons
  addonsRepoName: whitecruiser-apps
# -- OpenStack cloud infrastructure and authentication configuration
infraConfig:
  # -- OpenStack Keystone authentication URL (identity service endpoint)
  authUrl: https://whitecloud.intra.whitestack.com:5000/v3
  # -- List of OpenStack availability zones for node distribution and high availability
  availabilityZone: ""
  domainName: Default
  keypairName: ""
  privateKeyFile: ""
  region: RegionOne
  sshUser: ubuntu
  tenantName: ""
  username: ""
  netName: ""
  password:
    secret:
      # -- Name of the component
      name: passopenstack
      # -- Kubernetes namespace
      namespace: default
  caCerts:
    configMap:
      # -- Name of the component
      name: ""
      # -- Kubernetes namespace
      namespace: ""

# ===============
# Control Plane Nodes
# ===============
# -- controlPlane nodes configuration
controlPlaneNodes:
  quantity: 1
  taints:
    - key: node-role.kubernetes.io/control-plane
      value: true
      effect: NoSchedule
  # -- Kubernetes labels
  labels:
    - "node-role.kubernetes.io/control-plane=true"
  # -- Kubernetes annotations
  annotations: {}
  flavorName: m1.large
  imageName: Ubuntu 22.04 LTS
  rootVolume:
    sizeGiB: "40"
  securityGroups: ""

# ===============
# Worker Nodes
# ===============
# -- worker nodes configuration
workerNodes:
  imageName: Ubuntu 22.04 LTS
  defaults:
    taints:
      - key: node-role.kubernetes.io/worker
        effect: NoSchedule
    # -- Kubernetes labels
    labels:
      - "node-role.kubernetes.io/worker=true"
    flavorName: m1.large
    quantity: 2
    securityGroups: ""
    rootVolume:
      sizeGiB: "50"
  nodes:
    - name: worker-node-sin-flavor
      quantity: 1
      # -- Kubernetes labels
      labels:
        - "node-role.kubernetes.io/worker=true"
        - "node-role.kubernetes.io/worker-diff=true"
      rootVolume:
        sizeGiB: "60"
    - name: worker-node-medium
      flavorName: ""

# -- cni configuration
cniConfig:
  podCIDR: "10.42.0.0/16"
  serviceCIDR: "10.43.0.0/16"
  mtu: 1440
  tunnelProtocol: "VXLAN"
  masquerade: true
  bgp: false
  multusEnabled: false
  # Configures general installation parameters for Calico. Schema is based
  # on the operator.tigera.io/Installation API documented
  # here: https://docs.tigera.io/calico/latest/reference/installation/api#operator.tigera.io/v1.InstallationSpec
  # Values ref. for cilium: https://github.com/rancher/rke2-charts/blob/main/charts/rke2-cilium/rke2-cilium/1.17.300/values.yaml
  # -- additional configuration
  additionalConfig: {}

storage:
  longhorn:
    # -- Enable or disable this component
    enabled: false
    # -- Custom values override
    customValues: {}
  openebs: # https://github.com/openebs/charts/blob/main/charts/openebs/values.yaml
    # -- Enable or disable this component
    enabled: true
    # -- Custom values override
    customValues: {}
  cinder:
    # -- Enable or disable this component
    enabled: false
    # -- Custom values override
    customValues: {}
  cephFS:
    # -- Enable or disable this component
    enabled: false
    clusterID: "aaaaaaaa-bbbb-1111-2222-33333ccccccc"
    monitorList: [ ]
    # monitorList:
    #  - "1.2.3.4:6789"
    #  - "1.2.3.5:6789"
    pool: "volumes"
    userID: "admin"
    userKey: "AAAAAAAAAAAAAAAAAA/BBBBBBBBBBBBBBBBBBB=="
    provisionerReplicaCount: 3
    reclaimPolicy: "Retain"
    enabledHostNetwork: false
    fsName: ""
    # -- Custom values override
    customValues: {}
  cephRBD:
    # -- Enable or disable this component
    enabled: false
    clusterID: "aaaaaaaa-bbbb-1111-2222-33333ccccccc"
    monitorList: [ ]
    # monitorList:
    #  - "1.2.3.4:6789"
    #  - "1.2.3.5:6789"
    pool: "volumes"
    userID: "admin"
    userKey: "AAAAAAAAAAAAAAAAAA/BBBBBBBBBBBBBBBBBBB=="
    provisionerReplicaCount: 3
    reclaimPolicy: "Retain"
    enabledHostNetwork: false
    # -- Custom values override
    customValues: {}
# -- Logging configuration
logging:
  # -- Enable or disable this component
  enabled: true
  clusterOutputs:
    server:
      host: <changeme>
      port: 24224
  # -- Custom values override
  customValues: {}
metallb:
  # -- Enable or disable this component
  enabled: true
  # -- Custom values override
  customValues: {}
# -- Monitoring configuration
monitoring:
  # -- Enable or disable this component
  enabled: false
  thanos:
    objectStorage:
      accessKey: <changeme>
      bucket: <changeme>
      endpoint: <changeme:changeme>
      secretKey: <changeme>
  thanosIngress:
    host: <changeme>
  # -- Custom values override
  customValues: {}
ingressNginx:
  # -- Enable or disable this component
  enabled: true
  # -- Custom values override
  customValues: {}
kubevirt:
  # -- Enable or disable this component
  enabled: true
  # -- Custom values override
  customValues: {}
sriovOperator:
  # -- Enable or disable this component
  enabled: true
  # -- Custom values override
  customValues: {}
nodeConfigOperator:
  # -- Enable or disable this component
  enabled: true
  # -- manager configuration
  managerConfig:
    aptEnabled: true
    hostfsEnabled: true
  # -- Custom values override
  customValues:  {}
certManager:
  # -- Enable or disable this component
  enabled: false
  # -- Custom values override
  customValues:  {}
ntp:
  # -- Enable or disable this component
  enabled: true
  # -- Custom values override
  customValues: { }
x509CertExporter:
  # -- Enable or disable this component
  enabled: true
  # -- Custom values override
  customValues: { }

registries:
  # -- Enable or disable this component
  enabled: false
#  mirrors:
#    "docker.io":
#      endpoints:
#        - "https://registry.internal.example.com"
#      rewrite: {}
#  configs:
#    "registry.internal.example.com":
#      auth:
#        username: "registry-user"
#        passwordSecret:
#          name: "registry-creds"
#          key: "password"
#      tls:
#        insecureSkipVerify: false
#        caSecret:
#          name: "registry-ca"
#          key: "ca.crt"